 // mint 2


:P                  // Print header and instructions
  `Lorentz Length Contraction Calculator`/N
  `Enter length (1-1000):`/N
;

:S                  // Scale function (multiplies by 100 for fixed point)
  100 *
;

:V                  // Get velocity and validate
  `Enter velocity (1-99% of c):`/N
  /K 48 - n!       // Read first digit
  /K 48 - m!       // Read second digit (optional)
  m 0 < (          // If no second digit
    n             // Use first digit only
  ) /E (
    n 10 * m +    // Combine digits
  )
  " 100 < (       // Validate velocity < 100
    `Valid velocity`/N
  ) /E (
    `Error: velocity must be < 100`/N
    0 /c !        // Clear carry
    V             // Try again
  )
;

:C                  // Calculate contraction
  " *              // Square velocity
  100 $            // Put 100 on stack under v^2
  $ /              // Divide 10000 by 100
  -                // Subtract from 10000
  " *              // Square result for scaling
  100 /            // Divide by 100 for scaling
  100 $            // Put 100 on stack 
  $ /              // Get square root approximation
  l *              // Multiply by original length
  100 /            // Scale back down
;

:L                  // Main function
  P                // Print header
  /K 48 - l!       // Get length
  l S l!           // Scale length
  V v!             // Get velocity
  v C .            // Calculate and print result
  `Units`/N
;


L                    // Run the program
5                    // Enter length (e.g., 5 units)
80                   // Enter velocity (e.g., 80% of c)

